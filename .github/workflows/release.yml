name: Publish Release From Master

on:
  workflow_dispatch:
  push:
    paths:
      # Other paths likely don't need to be published
      - "src/**"
      - "package.json"
      - ".github/workflows/**"

jobs:
  build:
    name: Publish Compiled
    runs-on: ubuntu-latest
    permissions:
      contents: write # needed to make a release
    strategy:
      matrix:
        node-version: [latest]
        # node-version: [14.x, 16.x, 18.x, 20.x]

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Check package-lock.json existence
        id: check_lock
        uses: andstor/file-existence-action@v2
        with:
          files: "package-lock.json"
      - name: Check npm-shrinkwrap.json existence
        id: check_shrinkwrap
        if: steps.check_lock.outputs.files_exists == 'false'
        uses: andstor/file-existence-action@v2
        with:
          files: "npm-shrinkwrap.json"

      - name: Install npm dependencies (ci)
        env:
          LOCK_EXISTS: ${{ steps.check_lock.outputs.files_exists == 'true' || steps.check_shrinkwrap.outputs.files_exists == 'true' }}
        if: ${{ env.LOCK_EXISTS == 'true' }}
        run: npm ci
      - name: Install npm dependencies (install)
        env:
          LOCK_EXISTS: ${{ steps.check_lock.outputs.files_exists == 'true' || steps.check_shrinkwrap.outputs.files_exists == 'true' }}
        if: ${{ env.LOCK_EXISTS == 'false' }}
        run: npm install

      - name: Compile
        run: npm run package
      - run: ls

      - name: Set tag name
        id: tag
        run: printf '%s\n' "tag=v$(date +%Y%m%d.%H%M%S)" >> $GITHUB_OUTPUT

      - name: Create Release
        id: create_release
        uses: ncipollo/release-action@v1
        with:
          name: Release ${{ github.ref_name }}
          tag: ${{ steps.tag.outputs.tag }}
          omitBody: true
          commit: ${{ github.sha }}
          artifacts: ./dist/index.html
          artifactContentType: text/html
          makeLatest: true

      - uses: eregon/keep-last-n-releases@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          n: 3
          remove_tags_without_release: true
